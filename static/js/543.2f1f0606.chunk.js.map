{"version":3,"file":"static/js/543.2f1f0606.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","utils/getFilteredContacts.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { useContacts } from \"hooks\";\nimport css from \"./ContactForm.module.css\";\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const { contacts } = useContacts();\n\n  const handleChangeInput = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetContactForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const normalizeName = name.toLowerCase();\n    if (contacts.some(contact => contact.name.toLowerCase() === normalizeName)) {\n      alert(`\"${normalizeName}\" is already in contacts.`);\n      return;\n    };\n\n    dispatch(addContact({ name, number }));\n    resetContactForm();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.label}>\n            Name\n            <input className={css.input}\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                onChange={handleChangeInput}\n            />\n        </label>\n\n        <label className={css.label}>\n            Number\n            <input className={css.input}\n                type=\"tel\"\n                name=\"number\"\n                value={number}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                onChange={handleChangeInput}\n            />\n        </label>\n\n        <button className={css.btn} type=\"submit\">Add contact</button>\n        \n    </form>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"Contact_listItem__YRNe7\",\"contactName\":\"Contact_contactName__6ZIQb\",\"contactNumber\":\"Contact_contactNumber__3cYv8\",\"deleteBtn\":\"Contact_deleteBtn__L35yB\"};","import { MdClose } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from \"prop-types\";\nimport css from \"./Contact.module.css\";\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id))\n  };\n\n  return (\n    <li className={css.listItem}>\n      <span className={css.contactName}>{name}</span>\n      <span className={css.contactNumber}>{number}</span>\n      <button className={css.deleteBtn} type=\"button\" onClick={() => handleDelete(id)}>\n        <MdClose size={24} />\n      </button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useContacts } from \"hooks\";\nimport { Contact } from \"components/Contact\";\nimport { getFilteredContacts } from \"utils/getFilteredContacts\";\nimport css from \"./ContactList.module.css\";\n\nexport const ContactList = () => {\n  const { filter, contacts } = useContacts();\n\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map((contact) =>\n        (<Contact key={contact.id} {...contact} />)\n      )}\n    </ul>\n  );\n};\n","export const getFilteredContacts = (contacts, filter) => {\n  const normalizedFilter = filter.trim().toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Filter_form__wVnxJ\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useContacts } from \"hooks\";\nimport { useDispatch } from \"react-redux\";\nimport { setFilter } from \"redux/contacts/slice\";\nimport css from \"./Filter.module.css\";\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { filter } = useContacts();\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    return dispatch(setFilter(value));\n  };\n\n  return (\n    <form className={css.form}>\n      <label className={css.label}>\n        Find contacts by name:\n        <input className={css.input}\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={handleChange}\n        />\n      </label>\n    </form>\n  );\n};","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/operations';\n\nimport { useContacts } from 'hooks';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\n\nconst css = {\n  fontWeight: 700,\n  color: 'red',\n};\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const { isLoading } = useContacts();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      {isLoading && <div style={css}>Requesting contacts...</div>}\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useContacts","handleChangeInput","e","target","value","className","css","onSubmit","preventDefault","normalizeName","toLowerCase","some","contact","alert","addContact","type","pattern","title","required","onChange","Contact","id","onClick","deleteContact","handleDelete","size","ContactList","filter","filteredContacts","normalizedFilter","trim","includes","getFilteredContacts","map","Filter","setFilter","fontWeight","color","isLoading","useEffect","getContacts","style"],"sourceRoot":""}