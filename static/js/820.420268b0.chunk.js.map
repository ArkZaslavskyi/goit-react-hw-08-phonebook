{"version":3,"file":"static/js/820.420268b0.chunk.js","mappings":"4MAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,SAASC,KAAxB,EACtBC,EAAkB,SAAAJ,GAAK,OAAIA,EAAMC,KAAKC,SAASG,SAAxB,E,oBCApC,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAA6H,yB,SCIhHC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,OAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,OAAQT,GACN,IAAK,OACHC,EAAQQ,GACR,MACF,IAAK,SACHN,EAAUM,GACV,MACF,QACE,OAEL,EAiBD,OACE,kBAAMC,UAAWC,EAAUC,SAXR,SAACL,GACpBA,EAAEM,iBAKFT,GAASU,EAAAA,EAAAA,IAAW,CAAEd,KAAAA,EAAME,OAAAA,KAV5BD,EAAQ,IACRE,EAAU,GAWX,EAGC,WACI,mBAAOO,UAAWC,EAAlB,kBAEI,kBAAOD,UAAWC,EACdI,KAAK,OACLf,KAAK,OACLS,MAAOT,EACPgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUb,QAIlB,mBAAOI,UAAWC,EAAlB,oBAEI,kBAAOD,UAAWC,EACdI,KAAK,MACLf,KAAK,SACLS,MAAOP,EACPc,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUb,QAIlB,mBAAQI,UAAWC,EAASI,KAAK,SAAjC,2BAIP,E,oBCvED,EAA2B,0BAA3B,EAAmE,6BAAnE,EAAgH,+BAAhH,EAA2J,2BCI9IK,EAAU,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIrB,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAC5BE,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAIK,UAAWC,EAAf,WACE,iBAAMD,UAAWC,EAAjB,SAAmCX,KACnC,iBAAMU,UAAWC,EAAjB,SAAqCT,KACrC,mBAAQQ,UAAWC,EAAeI,KAAK,SAASO,QAAS,kBARxC,SAAAD,GACnBjB,GAASmB,EAAAA,EAAAA,IAAcF,GACxB,CAMkEG,CAAaH,EAAnB,EAAzD,UACE,SAAC,MAAD,CAASI,KAAM,SAItB,ECpBD,EAAuB,0BCIVC,EAAc,WACzB,IAAM/B,GAAQgC,EAAAA,EAAAA,IAAYpC,GAE1B,OACE,eAAImB,UAAWC,EAAf,SACGhB,EAAMiC,KAAI,SAACC,GAAD,OACR,SAACT,GAAD,UAA2BS,GAAbA,EAAKR,GADX,KAKhB,ECeD,EAtBiB,WACf,IAAMjB,GAAWC,EAAAA,EAAAA,MAEXR,GAAY8B,EAAAA,EAAAA,IAAY/B,GAM9B,OAJAkC,EAAAA,EAAAA,YAAU,WACR1B,GAAS2B,EAAAA,EAAAA,MACV,GAAE,CAAC3B,KAGF,iCACE,SAACN,EAAD,IACCD,IACC,gBAAKmC,MAAO,CAAEC,WAAY,IAAKC,MAAO,OAAtC,qCAIF,SAACR,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.data.contacts.items;\nexport const selectIsLoading = state => state.data.contacts.isLoading;\nexport const selectIsError = state => state.data.contacts.error;\nexport const selectFilter = state => state.data.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport css from \"./ContactForm.module.css\";\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChangeInput = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetContactForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // const form = e.currentTarget;\n    // console.log(form);\n\n    dispatch(addContact({ name, number }));\n    resetContactForm();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.label}>\n            Name\n            <input className={css.input}\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                onChange={handleChangeInput}\n            />\n        </label>\n\n        <label className={css.label}>\n            Number\n            <input className={css.input}\n                type=\"tel\"\n                name=\"number\"\n                value={number}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                onChange={handleChangeInput}\n            />\n        </label>\n\n        <button className={css.btn} type=\"submit\">Add contact</button>\n        \n    </form>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"Contact_listItem__YRNe7\",\"contactName\":\"Contact_contactName__6ZIQb\",\"contactNumber\":\"Contact_contactNumber__3cYv8\",\"deleteBtn\":\"Contact_deleteBtn__L35yB\"};","import { MdClose } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from \"./Contact.module.css\";\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id))\n  };\n\n  return (\n    <li className={css.listItem}>\n      <span className={css.contactName}>{name}</span>\n      <span className={css.contactNumber}>{number}</span>\n      <button className={css.deleteBtn} type=\"button\" onClick={() => handleDelete(id)}>\n        <MdClose size={24} />\n      </button>\n    </li>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from \"react-redux\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { Contact } from \"components/Contact\";\nimport css from \"./ContactList.module.css\";\n\nexport const ContactList = () => {\n  const items = useSelector(selectContacts);\n\n  return (\n    <ul className={css.list}>\n      {items.map((item) =>\n        (<Contact key={item.id} {...item} />)\n      )}\n    </ul>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { getContacts } from 'redux/contacts/operations';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      {isLoading && (\n        <div style={{ fontWeight: 700, color: 'red' }}>\n          Requesting contacts...\n        </div>\n      )}\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","data","contacts","items","selectIsLoading","isLoading","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChangeInput","e","target","value","className","css","onSubmit","preventDefault","addContact","type","pattern","title","required","onChange","Contact","id","onClick","deleteContact","handleDelete","size","ContactList","useSelector","map","item","useEffect","getContacts","style","fontWeight","color"],"sourceRoot":""}